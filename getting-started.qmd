# Getting Started with R for Data Analysis {#sec-gettingStarted}

The book uses `R` for statistical analyses (<http://www.r-project.org>).
R is a free software environment; you can download it at no charge here: <https://cran.r-project.org>.

## Initial Setup {#sec-initialSetup}

To get started, follow the following steps:

1. Install `R`: <https://cran.r-project.org>
1. Install `RStudio Desktop`: <https://posit.co/download/rstudio-desktop>
1. After installing `RStudio`, open `RStudio` and run the following code in the console to install several key `R` packages:

```{r}
#| eval: false

install.packages(c("petersenlab","tidyverse","psych"))
```

::: {#nte-gettingStarted .callout-note title="If you are in Dr. Petersen's class"}
If you are in Dr. Petersen's class, also perform the following steps:

1. Set up a free account on [GitHub.com](https://github.com).
1. Download GitHub Desktop: <https://desktop.github.com>
:::

## Installing Packages {#sec-installingPackages}

You can install R packages using the following syntax:

```{r}
#| eval: false

install.packages("INSERT_PACKAGE_NAME_HERE")
```

For instance, you can use the following code to install the `nflreadr` package:

```{r}
#| eval: false

install.packages("nflreadr")
```

## Load Packages {#sec-loadPackages}

```{r}
library("nflreadr")
library("nflfastR")
library("progressr")
library("tidyverse")
```

## Download Football Data {#sec-downloadFootballData}

### Players {#sec-downloadPlayers}

```{r}
#| eval: false

nfl_players <- progressr::with_progress(
  nflreadr::load_players())
```

```{r}
#| eval: false
#| include: false

save(
  nfl_players,
  file = here("data", "nfl_players.RData")
)
```

```{r}
#| include: false

library("here")

load(file = here("data", "nfl_players.RData"))
```

### Teams {#sec-downloadTeams}

```{r}
#| eval: false

nfl_teams <- progressr::with_progress(
  nflreadr::load_teams(current = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_teams,
  file = here("data", "nfl_teams.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_teams.RData"))
```

### Player Info {#sec-downloadPlayerInfo}

### Rosters {#sec-downloadRosters}

A Data Dictionary for rosters is located at the following link: <https://nflreadr.nflverse.com/articles/dictionary_rosters.html>

```{r}
#| eval: false

nfl_rosters <- progressr::with_progress(
  nflreadr::load_rosters(seasons = TRUE))

nfl_rosters_weekly <- progressr::with_progress(
  nflreadr::load_rosters_weekly(seasons = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_rosters,
  file = here("data", "nfl_rosters.RData")
)

save(
  nfl_rosters_weekly,
  file = here("data", "nfl_rosters_weekly.RData")
)
```

```{r}
#| include: false

library("here")

load(file = here("data", "nfl_rosters.RData"))
load(file = here("data", "nfl_rosters_weekly.RData"))
```

### Game Schedules {#sec-downloadSchedules}

```{r}
#| eval: false

nfl_schedules <- progressr::with_progress(
  nflreadr::load_schedules(seasons = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_schedules,
  file = here("data", "nfl_schedules.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_schedules.RData"))
```

### Draft Picks {#sec-draftPicks}

```{r}
#| eval: false

nfl_draftPicks <- progressr::with_progress(
  nflreadr::load_draft_picks(seasons = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_draftPicks,
  file = here("data", "nfl_draftPicks.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_draftPicks.RData"))
```

### Play-By-Play Data {#sec-downloadPlayByPlay}

To download play-by-play data from prior weeks and seasons, we can use the `load_pbp()` function of the `nflreadr` package.
We add a progress bar using the `with_progress()` function from the `progressr` package because it takes a while to run.
A Data Dictionary for the play-by-play data is located at the following link: <https://nflreadr.nflverse.com/articles/dictionary_pbp.html>

::: {#nte-downloadPlayByPlay .callout-note title="Downloading play-by-play data"}
Note: the following code takes a while to run.
:::

```{r}
#| eval: false

nfl_pbp <- progressr::with_progress(
  nflreadr::load_pbp(seasons = TRUE))
```

```{r}
#| include: false

nfl_pbp <- nflreadr::load_pbp(seasons = TRUE)
```

```{r}
#| eval: false
#| include: false

save(
  nfl_pbp,
  file = here("data", "nfl_pbp.RData")
)
```

```{r}
#| eval: false
#| include: false

load(file = file.path(path, "/OneDrive - University of Iowa/Teaching/Courses/Fantasy Football/Data/nfl_pbp.RData", fsep = ""))
```

### Participation {#sec-downloadParticipation}

A Data Dictionary for the participation data is located at the following link: <https://nflreadr.nflverse.com/articles/dictionary_participation.html>

```{r}
nfl_participation <- progressr::with_progress(
  nflreadr::load_participation(
    seasons = TRUE,
    include_pbp = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_participation,
  file = here("data", "nfl_participation.RData")
)
```

```{r}
#| eval: false
#| include: false

load(file = file.path(path, "/OneDrive - University of Iowa/Teaching/Courses/Fantasy Football/Data/nfl_participation.RData", fsep = ""))
```

### Historical Weekly Actual Player Statistics {#sec-downloadActualStats}

We can download historical week-by-week actual player statistics using the `load_player_stats()` function from the `nflreadr` package.
A Data Dictionary for statistics for offensive players is located at the following link: <https://nflreadr.nflverse.com/articles/dictionary_player_stats.html>.
A Data Dictionary for statistics for defensive players is located at the following link: <https://nflreadr.nflverse.com/articles/dictionary_player_stats_def.html>.

```{r}
#| eval: false

nfl_actualStats_offense_weekly <- progressr::with_progress(
  nflreadr::load_player_stats(
    seasons = TRUE,
    stat_type = "offense"))

nfl_actualStats_defense_weekly <- progressr::with_progress(
  nflreadr::load_player_stats(
    seasons = TRUE,
    stat_type = "defense"))

nfl_actualStats_kicking_weekly <- progressr::with_progress(
  nflreadr::load_player_stats(
    seasons = TRUE,
    stat_type = "kicking"))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_actualStats_offense_weekly, nfl_actualStats_defense_weekly, nfl_actualStats_kicking_weekly,
  file = here("data", "nfl_actualStats_weekly.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_actualStats_weekly.RData"))
```

### Injuries {#sec-injuries}

```{r}
#| eval: false

nfl_injuries <- progressr::with_progress(
  nflreadr::load_injuries(seasons = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_injuries,
  file = here("data", "nfl_injuries.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_injuries.RData"))
```

### Snap Counts {#sec-snapCounts}

```{r}
#| eval: false

nfl_snapCounts <- progressr::with_progress(
  nflreadr::load_snap_counts(seasons = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_snapCounts,
  file = here("data", "nfl_snapCounts.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_snapCounts.RData"))
```

### ESPN QBR {#sec-espnQBR}

```{r}
#| eval: false

nfl_espnQBR_seasonal <- progressr::with_progress(
  nflreadr::load_espn_qbr(
    seasons = TRUE,
    summary_type = c("season")))

nfl_espnQBR_weekly <- progressr::with_progress(
  nflreadr::load_espn_qbr(
    seasons = TRUE,
    summary_type = c("weekly")))

nfl_espnQBR_weekly$game_week <- as.character(nfl_espnQBR_weekly$game_week)

nfl_espnQBR <- bind_rows(
  nfl_espnQBR_seasonal,
  nfl_espnQBR_weekly
)
```

```{r}
#| eval: false
#| include: false

save(
  nfl_espnQBR,
  file = here("data", "nfl_espnQBR.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_espnQBR.RData"))
```

### Advanced Stats from PFR {#sec-advancedStatsPFR}

```{r}
#| eval: false

nfl_advancedStatsPFR_pass_seasonal <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("pass"),
    summary_level = c("season")))

nfl_advancedStatsPFR_pass_weekly <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("pass"),
    summary_level = c("week")))

nfl_advancedStatsPFR_rush_seasonal <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("rush"),
    summary_level = c("season")))

nfl_advancedStatsPFR_rush_weekly <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("rush"),
    summary_level = c("week")))

nfl_advancedStatsPFR_rec_seasonal <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("rec"),
    summary_level = c("season")))

nfl_advancedStatsPFR_rec_weekly <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("rec"),
    summary_level = c("week")))

nfl_advancedStatsPFR_def_seasonal <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("def"),
    summary_level = c("season")))

nfl_advancedStatsPFR_def_weekly <- progressr::with_progress(
  nflreadr::load_pfr_advstats(
    seasons = TRUE,
    stat_type = c("def"),
    summary_level = c("week")))

nfl_advancedStatsPFR <- bind_rows(
  nfl_advancedStatsPFR_pass_seasonal,
  nfl_advancedStatsPFR_pass_weekly,
  nfl_advancedStatsPFR_rush_seasonal,
  nfl_advancedStatsPFR_rush_weekly,
  nfl_advancedStatsPFR_rec_seasonal,
  nfl_advancedStatsPFR_rec_weekly,
  nfl_advancedStatsPFR_def_seasonal,
  nfl_advancedStatsPFR_def_weekly,
)
```

```{r}
#| eval: false
#| include: false

save(
  nfl_advancedStatsPFR,
  file = here("data", "nfl_advancedStatsPFR.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_advancedStatsPFR.RData"))
```

### Player Contracts {#sec-playerContracts}

```{r}
#| eval: false

nfl_playerContracts <- progressr::with_progress(
  nflreadr::load_contracts())
```

```{r}
#| eval: false
#| include: false

save(
  nfl_playerContracts,
  file = here("data", "nfl_playerContracts.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_playerContracts.RData"))
```

### FTN Charting Data {#sec-ftnCharting}

```{r}
#| eval: false

nfl_ftnCharting <- progressr::with_progress(
  nflreadr::load_ftn_charting(seasons = TRUE))
```

```{r}
#| eval: false
#| include: false

save(
  nfl_ftnCharting,
  file = here("data", "nfl_ftnCharting.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_ftnCharting.RData"))
```

### Fantasy Player IDs {#sec-fantasyPlayerIDs}

```{r}
#| eval: false

nfl_playerIDs <- progressr::with_progress(
  nflreadr::load_ff_playerids())
```

```{r}
#| eval: false
#| include: false

save(
  nfl_playerIDs,
  file = here("data", "nfl_playerIDs.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_playerIDs.RData"))
```

### FantasyPros Rankings {#sec-fantasyProsRankings}

```{r}
#| eval: false

#nfl_rankings <- progressr::with_progress( # currently throws error
#  nflreadr::load_ff_rankings(type = "all"))

nfl_rankings_draft <- progressr::with_progress(
  nflreadr::load_ff_rankings(type = "draft"))

nfl_rankings_weekly <- progressr::with_progress(
  nflreadr::load_ff_rankings(type = "week"))

nfl_rankings <- bind_rows(
  nfl_rankings_draft,
  nfl_rankings_weekly
)
```

```{r}
#| eval: false
#| include: false

save(
  nfl_rankings,
  file = here("data", "nfl_rankings.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_rankings.RData"))
```

### Expected Fantasy Points {#sec-expectedFantasyPoints}

```{r}
#| eval: false

nfl_expectedFantasyPoints_weekly <- progressr::with_progress(
  nflreadr::load_ff_opportunity(
    seasons = TRUE,
    stat_type = "weekly",
    model_version = "latest"
  ))

nfl_expectedFantasyPoints_pass <- progressr::with_progress(
  nflreadr::load_ff_opportunity(
    seasons = TRUE,
    stat_type = "pbp_pass",
    model_version = "latest"
  ))

nfl_expectedFantasyPoints_rush <- progressr::with_progress(
  nflreadr::load_ff_opportunity(
    seasons = TRUE,
    stat_type = "pbp_rush",
    model_version = "latest"
  ))

nfl_expectedFantasyPoints_weekly$season <- as.integer(nfl_expectedFantasyPoints_weekly$season)

nfl_expectedFantasyPoints_offense <- bind_rows(
  nfl_expectedFantasyPoints_pass,
  nfl_expectedFantasyPoints_rush
)
```

```{r}
#| eval: false
#| include: false

save(
  nfl_expectedFantasyPoints_weekly,
  file = here("data", "nfl_expectedFantasyPoints_weekly.RData")
)

save(
  nfl_expectedFantasyPoints_offense,
  file = here("data", "nfl_expectedFantasyPoints_offense.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_expectedFantasyPoints_weekly.RData"))

load(file = here("data", "nfl_expectedFantasyPoints_offense.RData"))
```

## Data Dictionary {#sec-dataDictionary}

Data Dictionaries are metadata that describe the meaning of the variables in a datset.
You can find Data Dictionaries for the various NFL datasets at the following link: <https://nflreadr.nflverse.com/articles/index.html>.

## Calculations {#sec-calculations}

### Historical Actual Player Statistics {#sec-calculateActualStats}

In addition to week-by-week actual player statistics, we can also compute historical actual player statistics as a function of different timeframes, including season-by-season and career statistics.

#### Career Statistics {#sec-calculateActualCareerStats}

First, we can compute the players' career statistics using the `calculate_player_stats()`, `calculate_player_stats_def()`, and `calculate_player_stats_kicking()` functions from the `nflfastR` package for offensive players, defensive players, and kickers, respectively.

::: {#nte-calculateActualCareerStats .callout-note title="Calculating players' career statistics"}
Note: the following code takes a while to run.
:::

```{r}
#| eval: false

nfl_actualStats_offense_career <- nflfastR::calculate_player_stats(
  nfl_pbp,
  weekly = FALSE)

nfl_actualStats_defense_career <- nflfastR::calculate_player_stats_def(
  nfl_pbp,
  weekly = FALSE)

nfl_actualStats_kicking_career <- nflfastR::calculate_player_stats_kicking(
  nfl_pbp,
  weekly = FALSE)
```

```{r}
#| eval: false
#| include: false

save(
  nfl_actualStats_offense_career, nfl_actualStats_defense_career, nfl_actualStats_kicking_career,
  file = here("data", "nfl_actualStats_career.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_actualStats_career.RData"))
```

#### Season-by-Season Statistics {#sec-calculateActualSeasonalStats}

Second, we can compute the players' season-by-season statistics.

```{r}
seasons <- unique(nfl_pbp$season)

nfl_pbp_seasonalList <- list()
nfl_actualStats_offense_seasonalList <- list()
nfl_actualStats_defense_seasonalList <- list()
nfl_actualStats_kicking_seasonalList <- list()
```

::: {#nte-calculateActualSeasonalStats .callout-note title="Calculating players' season-by-season statistics"}
Note: the following code takes a while to run.
:::

```{r}
#| eval: false

pb <- txtProgressBar(
  min = 0,
  max = length(seasons),
  style = 3)

for(i in 1:length(seasons)){
  # Subset play-by-play data by season
  nfl_pbp_seasonalList[[i]] <- nfl_pbp %>% 
    filter(season == seasons[i])
  
  # Compute actual statistics by season
  nfl_actualStats_offense_seasonalList[[i]] <- 
    nflfastR::calculate_player_stats(
      nfl_pbp_seasonalList[[i]],
      weekly = FALSE)

  nfl_actualStats_defense_seasonalList[[i]] <- 
    nflfastR::calculate_player_stats_def(
      nfl_pbp_seasonalList[[i]],
      weekly = FALSE)

  nfl_actualStats_kicking_seasonalList[[i]] <- 
    nflfastR::calculate_player_stats_kicking(
      nfl_pbp_seasonalList[[i]],
      weekly = FALSE)

  nfl_actualStats_offense_seasonalList[[i]]$season <- seasons[i]
  nfl_actualStats_defense_seasonalList[[i]]$season <- seasons[i]
  nfl_actualStats_kicking_seasonalList[[i]]$season <- seasons[i]
  
  print(
    paste("Completed computing projections for season: ", seasons[i], sep = ""))

  # Update the progress bar
  setTxtProgressBar(pb, i)
}

# Close the progress bar
close(pb)

nfl_actualStats_offense_seasonal <- nfl_actualStats_offense_seasonalList %>% 
  bind_rows()
nfl_actualStats_defense_seasonal <- nfl_actualStats_defense_seasonalList %>% 
  bind_rows()
nfl_actualStats_kicking_seasonal <- nfl_actualStats_kicking_seasonalList %>% 
  bind_rows()
```

```{r}
#| eval: false
#| include: false

save(
  nfl_actualStats_offense_seasonal, nfl_actualStats_defense_seasonal, nfl_actualStats_kicking_seasonal,
  file = here("data", "nfl_actualStats_seasonal.RData")
)
```

```{r}
#| include: false

load(file = here("data", "nfl_actualStats_seasonal.RData"))
```

#### Week-by-Week Statistics {#sec-calculateActualWeeklyStats}

We already load players' week-by-week statistics [above](#sec-downloadActualStats).
Nevertheless, we could compute players' weekly statistics from the play-by-play data using the following syntax:

```{r}
#| eval: false

nfl_actualStats_offense_weekly <- nflfastR::calculate_player_stats(
  nfl_pbp,
  weekly = TRUE)

nfl_actualStats_defense_weekly <- nflfastR::calculate_player_stats_def(
  nfl_pbp,
  weekly = TRUE)

nfl_actualStats_kicking_weekly <- nflfastR::calculate_player_stats_kicking(
  nfl_pbp,
  weekly = TRUE)
```

### Historical Actual Fantasy Points {#sec-calculateActualPoints}
